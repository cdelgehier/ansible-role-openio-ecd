# roles/ecd/tasks/main.yml
---
- name: "Include {{ ansible_distribution }} variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags:
    - install
    - configure

- name: "Include {{ ansible_distribution }} tasks"
  include_tasks: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: install

- name: Ensure directories exists
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('openio') }}"
    group: "{{ item.group | default('openio') }}"
    mode: "{{ item.mode | default(0755) }}"
  with_items:
    - path: "/etc/gridinit.d/{{ openio_ecd_namespace }}"
    - path: "{{ openio_ecd_sysconfig_dir }}/{{ openio_ecd_servicename }}"
    - path: "{{ openio_ecd_pid_directory }}"
    - path: "{{ openio_ecd_socket_directory }}"
    - path: "{{ openio_ecd_volume }}"
    - path: "/var/lib/oio/sds/{{ openio_ecd_namespace }}/coredump"
    - path: "/var/log/oio/sds/{{ openio_ecd_namespace }}/{{ openio_ecd_servicename }}"
      owner: "{{ syslog_user }}"
      mode: "0770"
  tags: configure

- name: Ensure pid directory is persistant
  lineinfile:
    dest: /etc/tmpfiles.d/ecd.conf
    create: true
    line: "d {{ openio_ecd_pid_directory }} 755 openio openio -"
    owner: openio
    group: openio
    mode: 0644
  tags: configure
  when: openio_ecd_pid_directory.split(' ')[0] | dirname is match("/run/.*")

- name: Generate configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: openio
    group: openio
    mode: 0644
  with_items:
    - src: "ecd.conf.j2"
      dest: "{{ openio_ecd_sysconfig_dir }}/\
        ecd-{{ openio_ecd_serviceid }}/{{ openio_ecd_servicename }}-httpd.conf"
    - src: "gridinit_ecd.conf.j2"
      dest: "{{ openio_ecd_gridinit_dir }}/{{ openio_ecd_gridinit_file_prefix }}\
        {{ openio_ecd_servicename }}.conf"
  register: _ecd_conf
  tags: configure

- name: Copy WSGI Script
  copy:
    src: ecd.wsgi
    dest: "{{ openio_ecd_sysconfig_dir }}/{{ openio_ecd_servicename }}/{{ openio_ecd_servicename }}.wsgi"
    owner: openio
    group: openio
    mode: 0644
  tags: configure

- name: "restart ecd to apply the new configuration"
  shell: |
    gridinit_cmd reload
    gridinit_cmd restart  {{openio_ecd_namespace}}-{{openio_ecd_servicename}}
  register: _restart_ecd
  when:
    - _ecd_conf is changed
    - not openio_ecd_provision_only
  tags: configure

- block:
    - name: "Ensure ecd is started"
      command: gridinit_cmd start {{ openio_ecd_namespace }}-{{ openio_ecd_servicename }}
      register: _start_ecd
      changed_when: '"Success" in _start_ecd.stdout'
      when:
        - not openio_ecd_provision_only
        - _restart_ecd is skipped
      tags: configure

    - name: check ecd
      uri:
        url: "http://{{ openio_ecd_bind_address }}:{{ openio_ecd_bind_port }}"
        method: HEAD
        status_code: 403
      register: _ecd_check
      retries: 3
      delay: 5
      until: _ecd_check is success
      changed_when: false
      tags: configure
      when:
        - not openio_ecd_provision_only
  when: openio_bootstrap | d(false)
...
